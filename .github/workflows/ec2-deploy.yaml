name: prodxcloud.io Build and Deploy

on:
  push:
    branches:
      - prod
      - main
      - master

env:
  ENVIRONMENT: ${{ github.ref_name }}
  REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
  REMOTE_USER: ${{ secrets.REMOTE_USER }}
  PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}  
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: "us-east-1"   

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    environment: ${{ github.ref_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install --force

      - name: Build the React application
        run: npm run build
      - name: Prepare EC2 prod_contents Folder
        env:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.PRIVATE_KEY}}
        run: |
          echo "${PRIVATE_KEY}" > PK && chmod 600 PK   
          ssh -o StrictHostKeyChecking=no -i "./PK" ${REMOTE_USER}@${REMOTE_HOST} '
            rm -rf prod_contents && mkdir -vp prod_contents
            '    
      - name: SCP ( COPY ) to EC2 prod_contents
        env:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          key: ${{ env.PRIVATE_KEY}}
        run: |
          scp -o StrictHostKeyChecking=no -i "./PK" -r ./dist ${REMOTE_USER}@${REMOTE_HOST}:~/prod_contents
         
      
  deploy:
      name: Copy build & deploy to nginx
      needs: build
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v4
          with:
            node-version: ${{ matrix.node-version }}
            cache: 'npm'

        - name: Copy prod_contents to nginx public directory
          env:
            host: ${{ env.REMOTE_HOST }}
            username: ${{ env.REMOTE_USER }}
            key: ${{ env.PRIVATE_KEY}}
          run: |
              echo "${PRIVATE_KEY}" > PK && chmod 600 PK            
              ssh -o StrictHostKeyChecking=no -i "./PK" ${REMOTE_USER}@${REMOTE_HOST} '
                cd prod_contents/dist && sudo cp -rf * /usr/share/nginx/html/
                '    